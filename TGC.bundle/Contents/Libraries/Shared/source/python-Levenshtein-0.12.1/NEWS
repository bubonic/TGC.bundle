v0.10.1 2005-01-13
    - apply_edit() broken for Unicodes was fixed (thanks to Radovan Garabik)
    - subtract_edit() function was added

v0.10 2004-04-14
    - Hamming distance, Jaro similarity metric and Jaro-Winkler similarity
      metric were added
    - ValueErrors raised on wrong argument types were fixed to TypeErrors

v0.9 2003-12-31
    - a poor-but-fast generalized median method quickmedian() was added
    - some auxiliary functions added to the C api (lev_set_median_index,
      lev_editops_normalize, ...)

v0.8.2 2003-11-11 (never actually released)
    - fixed missing `static' in the method list

v0.8.1 2003-09-06
    - some compilation problems with non-gcc were fixed

v0.8 2003-05-10
    - median_improve(), a generalized median improving function, was added
    - an arbitrary length limitation imposed on greedy median() result was
      removed
    - out of memory should be handled more gracefully (on systems w/o memory
      overcomitting)
    - the documentation now passes doctest

v0.7 2003-04-09
    - fixed greedy median() for Unicode characters > U+FFFF, it's now usable
      with whatever integer type wchar_t happens to be
    - added missing MANIFEST
    - renamed exported C functions, all public names now have lev_, LEV_ or
      Lev prefix; defined lev_byte, lev_wchar, and otherwise santinized
      the (still unstable) C interface
    - added edit-ops group of functions, with two interfaces: native, useful
      for string averaging, and difflib-like for interoperability
    - added an example SequenceMatcher-like class StringMatcher

v0.6 2003-03-31
    - a segfault in seqratio()/setratio() on invalid input has been fixed
      to an exception
    - optimized ratio() and distance() (about 20%)
    - Levenshtein.h header file was added to make it easier to actually use
      it as a C library

v0.5 2002-12-10
    - a segfault in setratio() was fixed
    - median() handles all empty strings situation more gracefully

v0.4 2002-12-09
    - new functions seqratio() and setratio() computing similarity between
      string sequences and sets
    - Levenshtein optimizations (affects all routines except median())
    - all Sequence objects are accepted, not just Lists

v0.3 2002-12-04
    - setmedian() finding set median was added
    - median() initial overhead for Unicodes was reduced

v0.2 2002-12-03
    - ratio() and distance() now accept both Strings and Unicodes
    - removed uratio() and udistance()
    - Levenshtein.c is now compilable as a C library (with -DNO_PYTHON)
    - a median() function finding approximate weighted median of a string
      set was added

v0.1 2002-11-30
    - Inital release
